# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#
# Auth endpoints
#
POST    /auth/register                          controllers.auth.AuthController.register
POST    /auth/access_token                      controllers.auth.AuthController.getAccessToken

#
# V1 API
#

# Organizations
GET     /api/v1/organizations                   api.v1.OrganizationApi.list(q: Option[String] ?= None, f: Option[String] ?= None, c ?= "false", sk: Int ?= 0, l: Int ?= 100)
GET     /api/v1/organizations/default           api.v1.OrganizationApi.getDefaultOrganization
GET     /api/v1/organizations/:id               api.v1.OrganizationApi.getOrganization(id: ObjectId)
POST    /api/v1/organizations                   api.v1.OrganizationApi.createOrganization
PUT     /api/v1/organizations/:id               api.v1.OrganizationApi.updateOrganization(id: ObjectId)
DELETE  /api/v1/organizations/:id               api.v1.OrganizationApi.deleteOrganization(id: ObjectId)


# Collections
GET     /api/v1/collections                     api.v1.CollectionApi.list
GET     /api/v1/collections/:id                 api.v1.CollectionApi.getCollection(id: ObjectId)
GET     /api/v1/organizations/:orgId/collections    api.v1.CollectionApi.listWithOrg(orgId:ObjectId)
POST    /api/v1/collections                     api.v1.CollectionApi.createCollection
PUT     /api/v1/collections/:id                 api.v1.CollectionApi.updateCollection(id: ObjectId)
DELETE  /api/v1/collections/:id                 api.v1.CollectionApi.deleteCollection(id: ObjectId)

# Users
GET     /api/v1/users                           api.v1.UserApi.list
GET     /api/v1/users/:id                       api.v1.UserApi.getUser(id: ObjectId)
POST    /api/v1/users                           api.v1.UserApi.createUser
PUT     /api/v1/users/:id                       api.v1.UserApi.updateUser(id: ObjectId)
DELETE  /api/v1/users/:id                       api.v1.UserApi.deleteUser(id: ObjectId)

# Items API
GET     /api/v1/items                           api.v1.ItemApi.list(q: Option[String] ?= None, f: Option[String] ?= None, c ?= "false", sk: Int ?= 0, l: Int ?= 50)
GET     /api/v1/items/:id                       api.v1.ItemApi.getItem(id: ObjectId)
DELETE  /api/v1/items/:id                       api.v1.ItemApi.deleteItem(id: ObjectId)
GET     /api/v1/items/:id/detail                api.v1.ItemApi.getItemDetail(id: ObjectId)
GET     /api/v1/items/:id/data                  api.v1.ItemApi.getItemData(id: ObjectId)
POST    /api/v1/items                           api.v1.ItemApi.createItem
PUT     /api/v1/items/:id                       api.v1.ItemApi.updateItem(id: ObjectId)



# Item Session API

POST    /api/v1/items/:itemId/sessions                    api.v1.ItemSessionApi.createItemSession(itemId: ObjectId)



