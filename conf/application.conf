# Secret key
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="na/afG<WVlFHscBia/dAe]a@X^9GE:;8Oq3I[XoU^X[bbnEN^cWREnvs5wiPDwl9"

# The application languages
application.langs="en"


# Amazon stuff
AMAZON_BASE_URL="http://s3.amazonaws.com"
AMAZON_ASSETS_BUCKET="corespring-assets-dev"
AMAZON_ASSETS_BUCKET=${?ENV_AMAZON_ASSETS_BUCKET}
AMAZON_TEST_BUCKET="s3-deployer-test-bucket"
AMAZON_TEST_BUCKET=${?ENV_AMAZON_TEST_BUCKET}
AMAZON_ACCESS_KEY="AKIAJNPUNTVH2HMFWVVA"
AMAZON_ACCESS_KEY=${?ENV_AMAZON_ACCESS_KEY}
AMAZON_ACCESS_SECRET="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"
AMAZON_ACCESS_SECRET=${?ENV_AMAZON_ACCESS_SECRET}

# Logger - @see logger.xml + logging/*.xml

# Salat/Mongo Settings
# For more options see: https://github.com/leon/play-salat
dbplugin = disabled
evolutionplugin = disabled

# MongoURI
# ~~~~~
# a MongoURI can also be used http://www.mongodb.org/display/DOCS/Connections
mongodb.default.uri = "mongodb://127.0.0.1:27017/api"
mongodb.default.uri = ${?ENV_MONGO_URI}

# Safe Mongo URI for seeding
# For our CI Example app we seed a remote db - normally this isn't allowed (to prevent developers mistakenly seeding a valid db).
# However for this server we do want to seed
seed.db.safe.mongodb.uri="mongodb://corespring:baker@ds049467.mongolab.com:49467/corespring-ci"

INIT_DATA=true
INIT_DATA=${?ENV_INIT_DATA}

ehcacheplugin=enabled
#ENV_EHCACHE_STATUS = enabled|disabled
ehcacheplugin=${?ENV_EHCACHE_STATUS}

#using memcache
memcachedplugin=disabled
memcachedplugin=${?ENV_MEMCACHED_PLUGIN}
memcached.host="127.0.0.1:11211"
memcached.host=${?MEMCACHIER_SERVERS}
memcached.user=${?MEMCACHIER_USERNAME}
memcached.password=${?MEMCACHIER_PASSWORD}

#rabbit-mq configuration
rabbitmq.host=localhost
rabbitmq.host=${?CLOUDAMQP_URL}

#dispatcher for actors. see:
#http://doc.akka.io/docs/akka/2.1.1/scala/dispatchers.html#dispatcher-lookup-scala
rabbitmq-worker-dispatcher = {
    type = BalancingDispatcher
    throughput = 1
}
rabbitmq-delivery-dispatcher = {
    type = PinnedDispatcher
}

# Demo Org Id - this org id is used to allow preview of demo content.
# It should be the oid of the 'Demo Org' in the database that has access to the demo content.
DEMO_ORG_ID = "502404dd0364dc35bb39339a"
DEMO_ORG_ID =${?ENV_DEMO_ORG_ID}

V2_PLAYER_ORG_IDS = "502404dd0364dc35bb393398,502404dd0364dc35bb39339c"
V2_PLAYER_ORG_IDS = ${?ENV_V2_PLAYER_ORG_IDS}

#Root Org Id - this org id is used by corespring folks only.
ROOT_ORG_ID = "502404dd0364dc35bb393398"
ROOT_ORG_ID = ${?ENV_ROOT_ORG_ID}

#how long the token lasts until it becomes invalid
TOKEN_DURATION=24

api{
  # log api requests?
  log-requests=true
  log-requests=${?ENV_LOG_API_REQUESTS}
  # How long to cache the apiClient + Org info before re-requesting it from the db
  cache{
    ttl-in-minutes=3
    ttl-in-minutes=${?ENV_LOG_API_CACHE_TTL}
  }
}

v2{
  itemTransformer {
    ## CA-1957 - allow model checking to be enabled
    checkModelIsUpToDate=true
    checkModelIsUpToDate=${?ENV_CHECK_CACHE_IN_V2_ITEM_TRANSFORM}
  }

  auth {
    # Cache decrypted options for the org (default: false)
    # Saves having to look up the api client in the db and then running a decrypt
    cache-decrypted-options=${?V2_AUTH_CACHE_DECRYPTED_OPTIONS}
    # How long should the cached decrypted options live for in minutes (default: 10)
    cache-decrypted-options-ttl-in-minutes=${?V2_AUTH_CACHE_DECRYPTED_OPTIONS_TTL_IN_MINUTES}
  }
}

include "securesocial.conf"
include "assets-loader"

# Corespring container integration
container {
  components{
    showReleasedOnly = ${?ENV_SHOW_RELEASED_ONLY_COMPONENTS}
    path = "corespring-components/components"
    path = ${?CONTAINER_COMPONENTS_PATH}
  }
  common {
    DEV_TOOLS_ENABLED = false
    DEV_TOOLS_ENABLED = ${?ENV_DEV_TOOLS_ENABLED}
  }
  cdn{
    domain = ${?CONTAINER_CDN_DOMAIN}
    # Useful for versioning the files - instead of invalidating them.
    # The distrubution must be configured to forward query params
    add-version-as-query-param = true
    add-version-as-query-param = ${?CONTAINER_CDN_ADD_VERSION_AS_QUERY_PARAM}
  }
}


# Prod fallback
container-prod.components.path = "/app/corespring-components/components"
container-prod.components.path = ${?CONTAINER_COMPONENTS_PATH}

DEV_TOOLS_ENABLED=false
DEV_TOOLS_ENABLED=${?ENV_DEV_TOOLS_ENABLED}

# Configure Akka Execution Contexts
akka {
  report-generator {
    generate-report {
      fork-join-executor {
        parallelism-factor = 20.0
        parallelism-max = 200
      }
    }
  }
  api-tracking-dispatcher {
    type = Dispatcher
    fork-join-executor {
      parallelism-factor = 2.0
      parallelism-max = 10
    }
  }
}

#mongodb.default.options {
#  connectionsPerHost = 30
#  threadsAllowedToBlockForConnectionMultiplier = 1000
#  connectTimeout = 60000
#}

newrelic {
  license-key = ${?NEW_RELIC_RUM_LICENSE_KEY}
  application-id = ${?NEW_RELIC_RUM_APPLICATION_ID}
}
