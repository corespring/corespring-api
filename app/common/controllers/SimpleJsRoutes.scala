package common.controllers

import play.core.Router.JavascriptReverseRoute

trait SimpleJsRoutes {

  /** Create a simple js object what contains the route information.
    * This is preferable to the standard play js route object that gives you a fully namespaced method.
    * All we want is the object name and the method name.
    *
    * Note: the unusual javascript functions you see below (_qS and _wA) are from the play framework.
    * They need to be added for this object to work.
    * @param objectName - the outer name of the object
    * @param routes - the javascript routes as generated by Play
    * @return
    */
  def createSimpleRoutes(objectName:String, routes : JavascriptReverseRoute*) : String = {

    /** strip the namespace - only use the method name */
    def process(jsr : JavascriptReverseRoute) : String = {
      val split = jsr.name.split("\\.").toList
      val shortName = split.last
      "this.%s = %s".stripMargin.format(shortName, jsr.f)
    }


    """var %s = new function(){
         var _qS = function(items){var qs = ''; for(var i=0;i<items.length;i++) {if(items[i]) qs += (qs ? '&' : '') + items[i]}; return qs ? ('?' + qs) : ''};

         var _wA = function(r){return {method:r.method,url:r.url}};
          %s;
      }""".format(objectName, routes.map(process).mkString("\n"))

  }
}
