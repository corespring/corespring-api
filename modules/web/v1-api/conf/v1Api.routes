# Collections
GET     /collections                     @org.corespring.api.v1.CollectionApi.list(q: Option[String] ?= None, f: Option[String] ?= None, c ?= "false", sk: Int ?= 0, l: Int ?= 50, sort:Option[String] ?= None)
GET     /collections/:id                 @org.corespring.api.v1.CollectionApi.getCollection(id: ObjectId)
GET     /organizations/:orgId/collections    @org.corespring.api.v1.CollectionApi.listWithOrg(orgId:ObjectId, q: Option[String] ?= None, f: Option[String] ?= None, c ?= "false", sk: Int ?= 0, l: Int ?= 50, sort:Option[String] ?= None)
POST    /collections                     @org.corespring.api.v1.CollectionApi.createCollection
PUT     /collections/:id                 @org.corespring.api.v1.CollectionApi.updateCollection(id: ObjectId)
DELETE  /collections/:id                 @org.corespring.api.v1.CollectionApi.deleteCollection(id: ObjectId)
PUT     /collections/:id/share-items                                     @org.corespring.api.v1.CollectionApi.shareItemsWithCollection(id: ObjectId)
PUT     /collections/:id/un-share-items                                  @org.corespring.api.v1.CollectionApi.unShareItemsWithCollection(id: ObjectId)
PUT     /collections/:id/share-filtered-items                            @org.corespring.api.v1.CollectionApi.shareFilteredItemsWithCollection(id: ObjectId, q: Option[String] ?= None)
PUT     /collections/:id/set-enabled-status/:enabled                     @org.corespring.api.v1.CollectionApi.setEnabledStatus(id: ObjectId, enabled: Boolean)
PUT     /collections/:id/share-with-org/:orgId                           @org.corespring.api.v1.CollectionApi.shareCollection(id: ObjectId, orgId: ObjectId)

GET     /collections/:ids/fieldValues/:field  @org.corespring.api.v1.CollectionApi.fieldValuesByFrequency(ids: String, field: String)

GET     /collections/:collId/items       @org.corespring.api.v1.ItemApi.listWithColl(collId:ObjectId, q: Option[String] ?= None, f: Option[String] ?= None, c ?= "false", sk: Int ?= 0, l: Int ?= 50, sort:Option[String] ?= None)

# Items
GET     /items                            @org.corespring.api.v1.ItemApi.list(q: Option[String] ?= None, f: Option[String] ?= None, c ?= "false", sk: Int ?= 0, l: Int ?= 50, sort:Option[String] ?= None)
PUT     /items/:id                        @org.corespring.api.v1.ItemApi.update(id: VersionedId[ObjectId])
GET     /items/query                      @org.corespring.api.v1.ItemApi.listAndCount(q: Option[String] ?= None, f: Option[String] ?= None, sk: Int ?= 0, l: Int ?= 50, sort:Option[String] ?= None)
GET     /organizations/:orgId/items       @org.corespring.api.v1.ItemApi.listWithOrg(orgId:ObjectId, q: Option[String] ?= None, f: Option[String] ?= None, c ?= "false", sk: Int ?= 0, l: Int ?= 50, sort:Option[String] ?= None)
GET     /items/:itemId/sessions/count     @org.corespring.api.v1.ItemApi.countSessions(itemId:VersionedId[ObjectId])
DELETE  /items/:id                        @org.corespring.api.v1.ItemApi.delete(id: VersionedId[ObjectId])

GET     /metadata/item/:id                @org.corespring.api.v1.ItemMetadataApi.get(id:VersionedId[ObjectId])

GET     /items/:id                        @org.corespring.api.v1.ItemApi.get(id: VersionedId[ObjectId], detail : Option[String] ?= Some("normal"))

# Resource api
GET     /items/:itemId/materials          @org.corespring.api.v1.ResourceApi.getSupportingMaterials(itemId:String)
POST    /items/:itemId/materials          @org.corespring.api.v1.ResourceApi.createSupportingMaterial(itemId:String)
POST    /items/:itemId/materialsWithFile/:name/:filename          @org.corespring.api.v1.ResourceApi.createSupportingMaterialWithFile(itemId:String, name, filename )
DELETE  /items/:itemId/materials/:resourceName          @org.corespring.api.v1.ResourceApi.deleteSupportingMaterial(itemId:String, resourceName : String)
POST    /items/:itemId/materials/:resourceName   @org.corespring.api.v1.ResourceApi.createSupportingMaterialFile(itemId:String, resourceName : String)
PUT     /items/:itemId/materials/:resourceName/:filename   @org.corespring.api.v1.ResourceApi.updateSupportingMaterialFile(itemId:String, resourceName : String, filename : String)
POST    /items/:itemId/materials/:resourceName/:filename/upload   @org.corespring.api.v1.ResourceApi.uploadFile(itemId:String, resourceName : String, filename : String )
DELETE  /items/:itemId/materials/:resourceName/:filename   @org.corespring.api.v1.ResourceApi.deleteSupportingMaterialFile(itemId:String, resourceName : String, filename : String)

POST    /items/:itemId/data         @org.corespring.api.v1.ResourceApi.createDataFile(itemId:String)
PUT     /items/:itemId/data/:filename         @org.corespring.api.v1.ResourceApi.updateDataFile(itemId:String, filename:String, force:Boolean ?= false)
POST    /items/:itemId/data/:filename/upload   @org.corespring.api.v1.ResourceApi.uploadFileToData(itemId:String, filename : String )
DELETE  /items/:itemId/data/:filename         @org.corespring.api.v1.ResourceApi.deleteDataFile(itemId:String, filename:String, force:Boolean ?= false)

GET     /contributors                    @org.corespring.api.v1.ContributorApi.getContributorsList()

GET     /field_values/domain          @org.corespring.api.v1.FieldValuesApi.domain()
GET     /field_values/subject         @org.corespring.api.v1.FieldValuesApi.subject(q:Option[String], l:Int ?= 0, sk:Int ?= 0)
GET     /field_values/cc-standard     @org.corespring.api.v1.FieldValuesApi.standard(q:Option[String], l:Int ?= 0, sk:Int ?= 0)
