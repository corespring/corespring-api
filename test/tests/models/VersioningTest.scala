package tests.models

import tests.BaseTest
import play.api.mvc.{AnyContentAsJson, Call}
import play.api.test.{FakeHeaders, FakeRequest}
import play.api.libs.json._
import play.api.test.Helpers._
import org.bson.types.ObjectId
import com.mongodb.casbah.Imports._
import com.novus.salat._
import play.api.mvc.Call
import play.api.test.FakeHeaders
import play.api.mvc.AnyContentAsJson
import play.api.libs.json.JsObject
import play.api.libs.json.JsString
import play.api.libs.json.JsBoolean
import models.item.{Item, Version}
import models.mongoContext._
import models.item.resource.VirtualFile


class VersioningTest extends BaseTest{

  "saving an item resource with no sessions returns successfully" in {
    //use /api/v1/items/:itemId/data/qti.xml
    val content = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- Thie example adapted from the PET Handbook, copyright University of Cambridge ESOL Examinations -->\n<assessmentItem xmlns=\"http://www.imsglobal.org/xsd/imsqti_v2p1\"\n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imsqti_v2p1 http://www.imsglobal.org/xsd/imsqti_v2p1.xsd\"\n                title=\"\" adaptive=\"false\" timeDependent=\"false\">\n\t<correctResponseFeedback>Correct!</correctResponseFeedback>\n\t<incorrectResponseFeedback>Your answer.</incorrectResponseFeedback>\n    <responseDeclaration identifier=\"RESPONSE\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>ChoiceC</value>\n        </correctResponse>\n    </responseDeclaration>\n    <outcomeDeclaration identifier=\"SCORE\" cardinality=\"single\" baseType=\"integer\">\n        <defaultValue>\n            <value>0</value>\n        </defaultValue>\n    </outcomeDeclaration>\n    <itemBody>\n\n<p class=\"intro-2\">Amanda used quarters to show a number. She used 8 pennies and 4 groups of ten pennies.</p>\n\n   \n        <choiceInteraction responseIdentifier=\"RESPONSE\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>What number did Amanda show?</prompt>\n            <simpleChoice identifier=\"ChoiceA\">12 <feedbackInline identifier=\"ChoiceA\" defaultFeedback=\"true\"/>\n</simpleChoice>\n            <simpleChoice identifier=\"ChoiceB\">22<feedbackInline identifier=\"ChoiceB\" defaultFeedback=\"true\"/>\n</simpleChoice>\n            <simpleChoice identifier=\"ChoiceC\">48<feedbackInline identifier=\"ChoiceC\" defaultFeedback=\"true\"/>\n</simpleChoice>\n             <simpleChoice identifier=\"ChoiceD\">84<feedbackInline identifier=\"ChoiceD\" defaultFeedback=\"true\"/>\n</simpleChoice>\n        </choiceInteraction>\n    </itemBody>\n\n</assessmentItem>\n"
    val update:Call = api.v1.routes.ResourceApi.updateDataFile("511275564924c9ca07b97043","qti.xml")
    val json:JsValue = JsObject(Seq(
      "name" -> JsString("qti.xml"),
      "contentType" -> JsString("text/xml"),
      "default" -> JsBoolean(true),
      "content" -> JsString(content)
    ))
    val updateRequest = FakeRequest(update.method,update.url+"?access_token="+token,FakeHeaders(),AnyContentAsJson(json))
    val result = routeAndCall(updateRequest).get
    status(result) must beEqualTo(OK)
    val data = Item.findOneById(new ObjectId("511275564924c9ca07b97043")).get.data.get
    val vf = data.files.find(_.isInstanceOf[VirtualFile]).get.asInstanceOf[VirtualFile]
    val contentIsCorrect = vf.content == content
//    vf.content = vf.content.replace("quarters","pennies")
//    Item.update(MongoDBObject("_id" -> new ObjectId("511275564924c9ca07b97043")),
//      MongoDBObject(Item.data -> grater[Resource].asDBObject(data)),
//      false,false,Item.defaultWriteConcern)
    contentIsCorrect must beTrue
  }

  "saving an item resource with no changes returns successfully" in {
    //use /api/v1/items/:itemId/data/qti.xml
    val content = "<assessmentItem\n        identifier=\"mcas-16373\" timeDependent=\"false\" title=\"16373\" xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd\" toolName=\"SIB\" adaptive=\"false\" toolVersion=\"1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.imsglobal.org/xsd/imsqti_v2p1\">\n    <stylesheet type=\"text/css\" href=\"css/mcas/default.css\"></stylesheet>\n    <correctResponseFeedback>Looking good buddy</correctResponseFeedback>\n    <incorrectResponseFeedback>You should rethink this</incorrectResponseFeedback>\n    <!-- single choice -->\n    <responseDeclaration identifier=\"mexicanPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>calderon</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- single choice -->\n    <responseDeclaration identifier=\"irishPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>higgins</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- multi choice -->\n    <responseDeclaration identifier=\"rainbowColors\" cardinality=\"multiple\" baseType=\"identifier\">\n        <correctResponse>\n            <value>blue</value>\n            <value>violet</value>\n            <value>red</value>\n        </correctResponse>\n        <!-- example of mapping score -->\n        <mapping lowerBound=\"0\" upperBound=\"3\" defaultValue=\"-3\">\n            <mapEntry mapKey=\"blue\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"violet\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"red\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"white\" mappedValue=\"-3\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- inline text interaction -->\n    <responseDeclaration identifier=\"winterDiscontent\" cardinality=\"multiple\" baseType=\"string\">\n        <correctResponse>\n            <value>York</value>\n            <value>york</value>\n        </correctResponse>\n        <mapping defaultValue=\"0\">\n            <mapEntry mapKey=\"York\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"york\" mappedValue=\"0.5\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"wivesOfHenry\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>aragon</value>\n            <value>boleyn</value>\n            <value>seymour</value>\n            <value>cleves</value>\n            <value>howard</value>\n            <value>parr</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"cutePugs\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>pug1</value>\n            <value>pug2</value>\n            <value>pug3</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- extended text interaction -->\n    <responseDeclaration identifier=\"longAnswer\" cardinality=\"single\" baseType=\"string\"/>\n\n    <responseDeclaration identifier=\"manOnMoon\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>armstrong</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <itemBody>\n\n        <choiceInteraction responseIdentifier=\"mexicanPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Mexico?</prompt>\n            <simpleChoice identifier='obama'> Barack Obama\n                <feedbackInline csFeedbackId='obama' identifier='obama' showHide='show'>Incorrect, Barack Obama is President of the USA</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='cameron'> James Cameron\n                <feedbackInline csFeedbackId='cameron' identifier='cameron' showHide='show'>Incorrect, James Cameron is Prime Minister of the UK</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='calderon'> Felipe Calderon\n                <feedbackInline csFeedbackId='calderon' identifier='calderon' showHide='show'><b>Correct!</b>, Felipe Calderon is the President of Mexico</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='netanyahu'> Benjamin Netanyahu\n                <feedbackInline csFeedbackId='netanyahu' identifier='netanyahu' showHide='show'>Incorrect, Benjamin Netanyahu is the Prime Minister of Israel</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n        <!-- this one has feedback pre-populated with csFeedbackId, outcomeIdentifier and identifier -->\n        <choiceInteraction responseIdentifier=\"irishPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Ireland?</prompt>\n            <simpleChoice identifier=\"robinson\"> Mary Robinson\n                <feedbackInline csFeedbackId='robinson' identifier='robinson' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"higgins\"> Michel D. Higgins\n                <feedbackInline csFeedbackId='higgins' identifier='higgins' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"guinness\"> Arthur Guinness\n                <feedbackInline csFeedbackId='guinness' identifier='guinness' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"adams\"> Gerry Adams\n                <feedbackInline csFeedbackId='adams' identifier='adams' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n        </choiceInteraction>\n\n\n\n        <choiceInteraction responseIdentifier=\"rainbowColors\" shuffle=\"false\" maxChoices=\"0\">\n            <prompt>Which colors are in a rainbow?</prompt>\n            <simpleChoice identifier='blue'> Blue\n                <feedbackInline csFeedbackId='blue' identifier='blue' showHide='show'>Blue is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='violet'> Violet\n                <feedbackInline csFeedbackId='violet' identifier='violet' showHide='show'>Violet is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='white'> White\n                <feedbackInline csFeedbackId='white' identifier='white' showHide='show'>White is not a color in the rainbow.</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='red'> Red\n                <feedbackInline csFeedbackId='red' identifier='red' howHide='show'>Red is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n\n        <prompt>Identify the missing word in this famous quote from Shakespeare's Richard III.</prompt>\n        <blockquote>\n        <p>Now is the winter of our discontent<br/> Made glorious summer by this sun of\n            <textEntryInteraction responseIdentifier=\"winterDiscontent\" expectedLength=\"15\"/>;<br/>\n            And all the clouds that lour'd upon our house<br/> In the deep bosom of the ocean\n            buried.</p>\n        </blockquote>\n        <p/>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"York\"\n                csFeedbackId=\"York_1\"\n                showHide=\"show\">\n              York is correct\n        </feedbackBlock>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"york\"\n                csFeedbackId=\"York_2\"\n                showHide=\"show\">\n            York is a proper noun, and should be capitalized.\n        </feedbackBlock>\n        <feedbackBlock\n                incorrectResponse=\"true\"\n                csFeedbackId=\"York_3\"\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                showHide=\"show\">\n            Not Correct\n        </feedbackBlock>\n\n        <p/>\n\n        <orderInteraction responseIdentifier=\"wivesOfHenry\" cs:requireModification=\"false\" shuffle=\"true\">\n            <prompt>Arrange the wives of Henry VIII in chronological order:</prompt>\n            <simpleChoice identifier=\"parr\">Catherine Parr</simpleChoice>\n            <simpleChoice identifier=\"boleyn\">Anne Boleyn</simpleChoice>\n            <simpleChoice identifier=\"cleves\" fixed=\"true\">Anne of Cleves</simpleChoice>\n            <simpleChoice identifier=\"aragon\">Catherine of Aragon</simpleChoice>\n            <simpleChoice identifier=\"seymour\">Jane Seymour</simpleChoice>\n            <simpleChoice identifier=\"howard\">Catherine Howard</simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n        <orderInteraction responseIdentifier=\"cutePugs\" shuffle=\"true\">\n            <prompt>Arrange these pugs in order of cuteness:</prompt>\n            <simpleChoice identifier=\"pug1\"><img src=\"http://stuffpoint.com/dogs/image/59240-dogs-4plus-pugs.jpg\" width=\"150\" height=\"150\"/> </simpleChoice>\n            <simpleChoice identifier=\"pug2\"><img src=\"http://images.fanpop.com/images/image_uploads/pug-pugs-239511_407_436.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n            <simpleChoice identifier=\"pug3\" fixed=\"true\"><img src=\"http://www.weruletheinternet.com/wp-content/uploads/images/2011/may/cute_pugs/cute_pugs_7.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n\n\n        <prompt>Write Sam a postcard. Write 25-35 words.</prompt>\n        <extendedTextInteraction responseIdentifier=\"longAnswer\" expectedLength=\"200\">\n\n        </extendedTextInteraction>\n\n        <h1>Inline choice interaction</h1>\n        <p>\n            The first man on the moon was <inlineChoiceInteraction\n                responseIdentifier=\"manOnMoon\"\n                required=\"false\">\n            <inlineChoice identifier=\"armstrong\">Neil Armstrong<feedbackInline csFeedbackId=\"armstrong\" identifier=\"armstrong\" defaultFeedback=\"true\">Hooray!</feedbackInline></inlineChoice>\n            <inlineChoice identifier=\"aldrin\">Buzz Aldrin<feedbackInline csFeedbackId=\"aldrin\"  identifier=\"aldrin\" defaultFeedback=\"true\">Boohoo</feedbackInline></inlineChoice>\n        </inlineChoiceInteraction>, he landed there in 1969.\n        </p>\n\n    </itemBody>\n\n    <modalFeedback\n            outcomeIdentifier=\"responses.winterDiscontent.value\"\n            identifier=\"York\"\n            showHide=\"show\">\n        This is modal feedback, shown when 'York' was entered in the inline text question\n    </modalFeedback>\n\n\n</assessmentItem>"
    val update:Call = api.v1.routes.ResourceApi.updateDataFile("511156d38604c9f77da9739d","qti.xml")
    val json:JsValue = JsObject(Seq(
      "name" -> JsString("qti.xml"),
      "contentType" -> JsString("text/xml"),
      "default" -> JsBoolean(true),
      "content" -> JsString(content)
    ))
    val updateRequest = FakeRequest(update.method,update.url+"?access_token="+token,FakeHeaders(),AnyContentAsJson(json))
    val result = routeAndCall(updateRequest).get
    status(result) must beEqualTo(OK)
  }

  "saving an item resource with changes and sessions but with a force query field returns successfully" in {
    //use /api/v1/items/:itemId/data/qti.xml
    val content = "<assessmentItem\n        identifier=\"mcas-16373\" timeDependent=\"false\" title=\"16373\" xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd\" toolName=\"SIB\" adaptive=\"false\" toolVersion=\"1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.imsglobal.org/xsd/imsqti_v2p1\">\n    <stylesheet type=\"text/css\" href=\"css/mcas/default.css\"></stylesheet>\n    <correctResponseFeedback>Looking good buddy</correctResponseFeedback>\n    <incorrectResponseFeedback>You should rethink this</incorrectResponseFeedback>\n    <!-- single choice -->\n    <responseDeclaration identifier=\"mexicanPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>calderon</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- single choice -->\n    <responseDeclaration identifier=\"irishPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>higgins</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- multi choice -->\n    <responseDeclaration identifier=\"rainbowColors\" cardinality=\"multiple\" baseType=\"identifier\">\n        <correctResponse>\n            <value>blue</value>\n            <value>violet</value>\n            <value>red</value>\n        </correctResponse>\n        <!-- example of mapping score -->\n        <mapping lowerBound=\"0\" upperBound=\"3\" defaultValue=\"-3\">\n            <mapEntry mapKey=\"blue\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"violet\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"red\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"white\" mappedValue=\"-3\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- inline text interaction -->\n    <responseDeclaration identifier=\"winterDiscontent\" cardinality=\"multiple\" baseType=\"string\">\n        <correctResponse>\n            <value>York</value>\n            <value>york</value>\n        </correctResponse>\n        <mapping defaultValue=\"0\">\n            <mapEntry mapKey=\"York\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"york\" mappedValue=\"0.5\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"wivesOfHenry\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>aragon</value>\n            <value>boleyn</value>\n            <value>seymour</value>\n            <value>cleves</value>\n            <value>howard</value>\n            <value>parr</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"cutePugs\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>pug1</value>\n            <value>pug2</value>\n            <value>pug3</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- extended text interaction -->\n    <responseDeclaration identifier=\"longAnswer\" cardinality=\"single\" baseType=\"string\"/>\n\n    <responseDeclaration identifier=\"manOnMoon\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>armstrong</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <itemBody>\n\n        <choiceInteraction responseIdentifier=\"mexicanPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Mexico?</prompt>\n            <simpleChoice identifier='obama'> Barack Obama\n                <feedbackInline csFeedbackId='obama' identifier='obama' showHide='show'>Incorrect, Barack Obama is President of the USA</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='cameron'> James Cameron\n                <feedbackInline csFeedbackId='cameron' identifier='cameron' showHide='show'>Incorrect, James Cameron is Prime Minister of the UK</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='calderon'> Felipe Calderon\n                <feedbackInline csFeedbackId='calderon' identifier='calderon' showHide='show'><b>Correct!</b>, Felipe Calderon is the President of Mexico</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='netanyahu'> Benjamin Netanyahu\n                <feedbackInline csFeedbackId='netanyahu' identifier='netanyahu' showHide='show'>Incorrect, Benjamin Netanyahu is the Prime Minister of Israel</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n        <!-- this one has feedback pre-populated with csFeedbackId, outcomeIdentifier and identifier -->\n        <choiceInteraction responseIdentifier=\"irishPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Ireland?</prompt>\n            <simpleChoice identifier=\"robinson\"> Mary Robinson\n                <feedbackInline csFeedbackId='robinson' identifier='robinson' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"higgins\"> Michel D. Higgins\n                <feedbackInline csFeedbackId='higgins' identifier='higgins' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"guinness\"> Arthur Guinness\n                <feedbackInline csFeedbackId='guinness' identifier='guinness' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"adams\"> Gerry Adams\n                <feedbackInline csFeedbackId='adams' identifier='adams' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n        </choiceInteraction>\n\n\n\n        <choiceInteraction responseIdentifier=\"rainbowColors\" shuffle=\"false\" maxChoices=\"0\">\n            <prompt>Which colors are in a rainbow?</prompt>\n            <simpleChoice identifier='blue'> Blue\n                <feedbackInline csFeedbackId='blue' identifier='blue' showHide='show'>Blue is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='violet'> Violet\n                <feedbackInline csFeedbackId='violet' identifier='violet' showHide='show'>Violet is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='white'> White\n                <feedbackInline csFeedbackId='white' identifier='white' showHide='show'>White is not a color in the rainbow.</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='red'> Red\n                <feedbackInline csFeedbackId='red' identifier='red' howHide='show'>Red is a color in skittles</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n\n        <prompt>Identify the missing word in this famous quote from Shakespeare's Richard III.</prompt>\n        <blockquote>\n        <p>Now is the winter of our discontent<br/> Made glorious summer by this sun of\n            <textEntryInteraction responseIdentifier=\"winterDiscontent\" expectedLength=\"15\"/>;<br/>\n            And all the clouds that lour'd upon our house<br/> In the deep bosom of the ocean\n            buried.</p>\n        </blockquote>\n        <p/>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"York\"\n                csFeedbackId=\"York_1\"\n                showHide=\"show\">\n              York is correct\n        </feedbackBlock>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"york\"\n                csFeedbackId=\"York_2\"\n                showHide=\"show\">\n            York is a proper noun, and should be capitalized.\n        </feedbackBlock>\n        <feedbackBlock\n                incorrectResponse=\"true\"\n                csFeedbackId=\"York_3\"\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                showHide=\"show\">\n            Not Correct\n        </feedbackBlock>\n\n        <p/>\n\n        <orderInteraction responseIdentifier=\"wivesOfHenry\" cs:requireModification=\"false\" shuffle=\"true\">\n            <prompt>Arrange the wives of Henry VIII in chronological order:</prompt>\n            <simpleChoice identifier=\"parr\">Catherine Parr</simpleChoice>\n            <simpleChoice identifier=\"boleyn\">Anne Boleyn</simpleChoice>\n            <simpleChoice identifier=\"cleves\" fixed=\"true\">Anne of Cleves</simpleChoice>\n            <simpleChoice identifier=\"aragon\">Catherine of Aragon</simpleChoice>\n            <simpleChoice identifier=\"seymour\">Jane Seymour</simpleChoice>\n            <simpleChoice identifier=\"howard\">Catherine Howard</simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n        <orderInteraction responseIdentifier=\"cutePugs\" shuffle=\"true\">\n            <prompt>Arrange these pugs in order of cuteness:</prompt>\n            <simpleChoice identifier=\"pug1\"><img src=\"http://stuffpoint.com/dogs/image/59240-dogs-4plus-pugs.jpg\" width=\"150\" height=\"150\"/> </simpleChoice>\n            <simpleChoice identifier=\"pug2\"><img src=\"http://images.fanpop.com/images/image_uploads/pug-pugs-239511_407_436.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n            <simpleChoice identifier=\"pug3\" fixed=\"true\"><img src=\"http://www.weruletheinternet.com/wp-content/uploads/images/2011/may/cute_pugs/cute_pugs_7.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n\n\n        <prompt>Write Sam a postcard. Write 25-35 words.</prompt>\n        <extendedTextInteraction responseIdentifier=\"longAnswer\" expectedLength=\"200\">\n\n        </extendedTextInteraction>\n\n        <h1>Inline choice interaction</h1>\n        <p>\n            The first man on the moon was <inlineChoiceInteraction\n                responseIdentifier=\"manOnMoon\"\n                required=\"false\">\n            <inlineChoice identifier=\"armstrong\">Neil Armstrong<feedbackInline csFeedbackId=\"armstrong\" identifier=\"armstrong\" defaultFeedback=\"true\">Hooray!</feedbackInline></inlineChoice>\n            <inlineChoice identifier=\"aldrin\">Buzz Aldrin<feedbackInline csFeedbackId=\"aldrin\"  identifier=\"aldrin\" defaultFeedback=\"true\">Boohoo</feedbackInline></inlineChoice>\n        </inlineChoiceInteraction>, he landed there in 1969.\n        </p>\n\n    </itemBody>\n\n    <modalFeedback\n            outcomeIdentifier=\"responses.winterDiscontent.value\"\n            identifier=\"York\"\n            showHide=\"show\">\n        This is modal feedback, shown when 'York' was entered in the inline text question\n    </modalFeedback>\n\n\n</assessmentItem>"
    val update:Call = api.v1.routes.ResourceApi.updateDataFile("511156d38604c9f77da9739d","qti.xml",true)
    val json:JsValue = JsObject(Seq(
      "name" -> JsString("qti.xml"),
      "contentType" -> JsString("text/xml"),
      "default" -> JsBoolean(true),
      "content" -> JsString(content)
    ))
    val updateRequest = FakeRequest(update.method,update.url+"&access_token="+token,FakeHeaders(),AnyContentAsJson(json))
    val result = routeAndCall(updateRequest).get
    status(result) must beEqualTo(OK)
    val data = Item.findOneById(new ObjectId("511156d38604c9f77da9739d")).get.data.get
    val vf = data.files.find(_.isInstanceOf[VirtualFile]).get.asInstanceOf[VirtualFile]
    val contentIsCorrect = vf.content == content
//    vf.content = vf.content.replace("skittles","the rainbow")
//    Item.update(MongoDBObject("_id" -> new ObjectId("511275564924c9ca07b97043")),
//      MongoDBObject(Item.data -> grater[Resource].asDBObject(data)),
//      false,false,Item.defaultWriteConcern)
    contentIsCorrect must beTrue

  }

  "saving an item resource with changes and sessions and with no force query field returns a forbidden message" in {
    val content = "<assessmentItem\n        identifier=\"mcas-16373\" timeDependent=\"false\" title=\"16373\" xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd\" toolName=\"SIB\" adaptive=\"false\" toolVersion=\"1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.imsglobal.org/xsd/imsqti_v2p1\">\n    <stylesheet type=\"text/css\" href=\"css/mcas/default.css\"></stylesheet>\n    <correctResponseFeedback>Looking good buddy</correctResponseFeedback>\n    <incorrectResponseFeedback>You should rethink this</incorrectResponseFeedback>\n    <!-- single choice -->\n    <responseDeclaration identifier=\"mexicanPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>calderon</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- single choice -->\n    <responseDeclaration identifier=\"irishPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>higgins</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- multi choice -->\n    <responseDeclaration identifier=\"rainbowColors\" cardinality=\"multiple\" baseType=\"identifier\">\n        <correctResponse>\n            <value>blue</value>\n            <value>violet</value>\n            <value>red</value>\n        </correctResponse>\n        <!-- example of mapping score -->\n        <mapping lowerBound=\"0\" upperBound=\"3\" defaultValue=\"-3\">\n            <mapEntry mapKey=\"blue\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"violet\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"red\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"white\" mappedValue=\"-3\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- inline text interaction -->\n    <responseDeclaration identifier=\"winterDiscontent\" cardinality=\"multiple\" baseType=\"string\">\n        <correctResponse>\n            <value>York</value>\n            <value>york</value>\n        </correctResponse>\n        <mapping defaultValue=\"0\">\n            <mapEntry mapKey=\"York\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"york\" mappedValue=\"0.5\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"wivesOfHenry\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>aragon</value>\n            <value>boleyn</value>\n            <value>seymour</value>\n            <value>cleves</value>\n            <value>howard</value>\n            <value>parr</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"cutePugs\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>pug1</value>\n            <value>pug2</value>\n            <value>pug3</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- extended text interaction -->\n    <responseDeclaration identifier=\"longAnswer\" cardinality=\"single\" baseType=\"string\"/>\n\n    <responseDeclaration identifier=\"manOnMoon\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>armstrong</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <itemBody>\n\n        <choiceInteraction responseIdentifier=\"mexicanPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Mexico?</prompt>\n            <simpleChoice identifier='obama'> Barack Obama\n                <feedbackInline csFeedbackId='obama' identifier='obama' showHide='show'>Incorrect, Barack Obama is President of the USA</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='cameron'> James Cameron\n                <feedbackInline csFeedbackId='cameron' identifier='cameron' showHide='show'>Incorrect, James Cameron is Prime Minister of the UK</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='calderon'> Felipe Calderon\n                <feedbackInline csFeedbackId='calderon' identifier='calderon' showHide='show'><b>Correct!</b>, Felipe Calderon is the President of Mexico</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='netanyahu'> Benjamin Netanyahu\n                <feedbackInline csFeedbackId='netanyahu' identifier='netanyahu' showHide='show'>Incorrect, Benjamin Netanyahu is the Prime Minister of Israel</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n        <!-- this one has feedback pre-populated with csFeedbackId, outcomeIdentifier and identifier -->\n        <choiceInteraction responseIdentifier=\"irishPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Ireland?</prompt>\n            <simpleChoice identifier=\"robinson\"> Mary Robinson\n                <feedbackInline csFeedbackId='robinson' identifier='robinson' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"higgins\"> Michel D. Higgins\n                <feedbackInline csFeedbackId='higgins' identifier='higgins' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"guinness\"> Arthur Guinness\n                <feedbackInline csFeedbackId='guinness' identifier='guinness' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"adams\"> Gerry Adams\n                <feedbackInline csFeedbackId='adams' identifier='adams' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n        </choiceInteraction>\n\n\n\n        <choiceInteraction responseIdentifier=\"rainbowColors\" shuffle=\"false\" maxChoices=\"0\">\n            <prompt>Which colors are in a rainbow?</prompt>\n            <simpleChoice identifier='blue'> Blue\n                <feedbackInline csFeedbackId='blue' identifier='blue' showHide='show'>Blue is a color in the skittles</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='violet'> Violet\n                <feedbackInline csFeedbackId='violet' identifier='violet' showHide='show'>Violet is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='white'> White\n                <feedbackInline csFeedbackId='white' identifier='white' showHide='show'>White is not a color in the rainbow.</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='red'> Red\n                <feedbackInline csFeedbackId='red' identifier='red' howHide='show'>Red is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n\n        <prompt>Identify the missing word in this famous quote from Shakespeare's Richard III.</prompt>\n        <blockquote>\n        <p>Now is the winter of our discontent<br/> Made glorious summer by this sun of\n            <textEntryInteraction responseIdentifier=\"winterDiscontent\" expectedLength=\"15\"/>;<br/>\n            And all the clouds that lour'd upon our house<br/> In the deep bosom of the ocean\n            buried.</p>\n        </blockquote>\n        <p/>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"York\"\n                csFeedbackId=\"York_1\"\n                showHide=\"show\">\n              York is correct\n        </feedbackBlock>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"york\"\n                csFeedbackId=\"York_2\"\n                showHide=\"show\">\n            York is a proper noun, and should be capitalized.\n        </feedbackBlock>\n        <feedbackBlock\n                incorrectResponse=\"true\"\n                csFeedbackId=\"York_3\"\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                showHide=\"show\">\n            Not Correct\n        </feedbackBlock>\n\n        <p/>\n\n        <orderInteraction responseIdentifier=\"wivesOfHenry\" cs:requireModification=\"false\" shuffle=\"true\">\n            <prompt>Arrange the wives of Henry VIII in chronological order:</prompt>\n            <simpleChoice identifier=\"parr\">Catherine Parr</simpleChoice>\n            <simpleChoice identifier=\"boleyn\">Anne Boleyn</simpleChoice>\n            <simpleChoice identifier=\"cleves\" fixed=\"true\">Anne of Cleves</simpleChoice>\n            <simpleChoice identifier=\"aragon\">Catherine of Aragon</simpleChoice>\n            <simpleChoice identifier=\"seymour\">Jane Seymour</simpleChoice>\n            <simpleChoice identifier=\"howard\">Catherine Howard</simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n        <orderInteraction responseIdentifier=\"cutePugs\" shuffle=\"true\">\n            <prompt>Arrange these pugs in order of cuteness:</prompt>\n            <simpleChoice identifier=\"pug1\"><img src=\"http://stuffpoint.com/dogs/image/59240-dogs-4plus-pugs.jpg\" width=\"150\" height=\"150\"/> </simpleChoice>\n            <simpleChoice identifier=\"pug2\"><img src=\"http://images.fanpop.com/images/image_uploads/pug-pugs-239511_407_436.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n            <simpleChoice identifier=\"pug3\" fixed=\"true\"><img src=\"http://www.weruletheinternet.com/wp-content/uploads/images/2011/may/cute_pugs/cute_pugs_7.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n\n\n        <prompt>Write Sam a postcard. Write 25-35 words.</prompt>\n        <extendedTextInteraction responseIdentifier=\"longAnswer\" expectedLength=\"200\">\n\n        </extendedTextInteraction>\n\n        <h1>Inline choice interaction</h1>\n        <p>\n            The first man on the moon was <inlineChoiceInteraction\n                responseIdentifier=\"manOnMoon\"\n                required=\"false\">\n            <inlineChoice identifier=\"armstrong\">Neil Armstrong<feedbackInline csFeedbackId=\"armstrong\" identifier=\"armstrong\" defaultFeedback=\"true\">Hooray!</feedbackInline></inlineChoice>\n            <inlineChoice identifier=\"aldrin\">Buzz Aldrin<feedbackInline csFeedbackId=\"aldrin\"  identifier=\"aldrin\" defaultFeedback=\"true\">Boohoo</feedbackInline></inlineChoice>\n        </inlineChoiceInteraction>, he landed there in 1969.\n        </p>\n\n    </itemBody>\n\n    <modalFeedback\n            outcomeIdentifier=\"responses.winterDiscontent.value\"\n            identifier=\"York\"\n            showHide=\"show\">\n        This is modal feedback, shown when 'York' was entered in the inline text question\n    </modalFeedback>\n\n\n</assessmentItem>"
    val update:Call = api.v1.routes.ResourceApi.updateDataFile("511156d38604c9f77da9739d","qti.xml")
    val json:JsValue = JsObject(Seq(
      "name" -> JsString("qti.xml"),
      "contentType" -> JsString("text/xml"),
      "default" -> JsBoolean(true),
      "content" -> JsString(content)
    ))
    val updateRequest = FakeRequest(update.method,update.url+"?access_token="+token,FakeHeaders(),AnyContentAsJson(json))
    val result = routeAndCall(updateRequest).get
    status(result) must beEqualTo(FORBIDDEN)
    (Json.parse(contentAsString(result)) match {
      case JsObject(fields) => {
        fields.exists(_._1 == "message") &&
          (fields.find(_._1 == "flags") match {
            case Some((_,JsArray(flags))) => flags.exists(_ == JsString("alert_increment"))
            case _ => false
          })
      }
      case _ => false
    }) must beTrue
  }
  "incrementing an item and then querying for a list of items returns the new revision of that item and does not include the old" in {
    val itemId = new ObjectId("511156d38604c9f77da9739d")
    val content = "<assessmentItem\n        identifier=\"mcas-16373\" timeDependent=\"false\" title=\"16373\" xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd\" toolName=\"SIB\" adaptive=\"false\" toolVersion=\"1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.imsglobal.org/xsd/imsqti_v2p1\">\n    <stylesheet type=\"text/css\" href=\"css/mcas/default.css\"></stylesheet>\n    <correctResponseFeedback>Looking good buddy</correctResponseFeedback>\n    <incorrectResponseFeedback>You should rethink this</incorrectResponseFeedback>\n    <!-- single choice -->\n    <responseDeclaration identifier=\"mexicanPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>calderon</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- single choice -->\n    <responseDeclaration identifier=\"irishPresident\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>higgins</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- multi choice -->\n    <responseDeclaration identifier=\"rainbowColors\" cardinality=\"multiple\" baseType=\"identifier\">\n        <correctResponse>\n            <value>blue</value>\n            <value>violet</value>\n            <value>red</value>\n        </correctResponse>\n        <!-- example of mapping score -->\n        <mapping lowerBound=\"0\" upperBound=\"3\" defaultValue=\"-3\">\n            <mapEntry mapKey=\"blue\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"violet\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"red\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"white\" mappedValue=\"-3\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- inline text interaction -->\n    <responseDeclaration identifier=\"winterDiscontent\" cardinality=\"multiple\" baseType=\"string\">\n        <correctResponse>\n            <value>York</value>\n            <value>york</value>\n        </correctResponse>\n        <mapping defaultValue=\"0\">\n            <mapEntry mapKey=\"York\" mappedValue=\"1\"/>\n            <mapEntry mapKey=\"york\" mappedValue=\"0.5\"/>\n        </mapping>\n    </responseDeclaration>\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"wivesOfHenry\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>aragon</value>\n            <value>boleyn</value>\n            <value>seymour</value>\n            <value>cleves</value>\n            <value>howard</value>\n            <value>parr</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <!-- orderInteraction -->\n    <responseDeclaration identifier=\"cutePugs\" cardinality=\"ordered\" baseType=\"identifier\">\n        <correctResponse>\n            <value>pug1</value>\n            <value>pug2</value>\n            <value>pug3</value>\n        </correctResponse>\n    </responseDeclaration>\n\n    <!-- extended text interaction -->\n    <responseDeclaration identifier=\"longAnswer\" cardinality=\"single\" baseType=\"string\"/>\n\n    <responseDeclaration identifier=\"manOnMoon\" cardinality=\"single\" baseType=\"identifier\">\n        <correctResponse>\n            <value>armstrong</value>\n        </correctResponse>\n    </responseDeclaration>\n\n\n    <itemBody>\n\n        <choiceInteraction responseIdentifier=\"mexicanPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Mexico?</prompt>\n            <simpleChoice identifier='obama'> Barack Obama\n                <feedbackInline csFeedbackId='obama' identifier='obama' showHide='show'>Incorrect, Barack Obama is President of the USA</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='cameron'> James Cameron\n                <feedbackInline csFeedbackId='cameron' identifier='cameron' showHide='show'>Incorrect, James Cameron is Prime Minister of the UK</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='calderon'> Felipe Calderon\n                <feedbackInline csFeedbackId='calderon' identifier='calderon' showHide='show'><b>Correct!</b>, Felipe Calderon is the President of Mexico</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='netanyahu'> Benjamin Netanyahu\n                <feedbackInline csFeedbackId='netanyahu' identifier='netanyahu' showHide='show'>Incorrect, Benjamin Netanyahu is the Prime Minister of Israel</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n        <!-- this one has feedback pre-populated with csFeedbackId, outcomeIdentifier and identifier -->\n        <choiceInteraction responseIdentifier=\"irishPresident\" shuffle=\"false\" maxChoices=\"1\">\n            <prompt>Who is the President of Ireland?</prompt>\n            <simpleChoice identifier=\"robinson\"> Mary Robinson\n                <feedbackInline csFeedbackId='robinson' identifier='robinson' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"higgins\"> Michel D. Higgins\n                <feedbackInline csFeedbackId='higgins' identifier='higgins' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"guinness\"> Arthur Guinness\n                <feedbackInline csFeedbackId='guinness' identifier='guinness' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n            <simpleChoice identifier=\"adams\"> Gerry Adams\n                <feedbackInline csFeedbackId='adams' identifier='adams' showHide='show' defaultFeedback='true' />\n            </simpleChoice>\n        </choiceInteraction>\n\n\n\n        <choiceInteraction responseIdentifier=\"rainbowColors\" shuffle=\"false\" maxChoices=\"0\">\n            <prompt>Which colors are in a rainbow?</prompt>\n            <simpleChoice identifier='blue'> Blue\n                <feedbackInline csFeedbackId='blue' identifier='blue' showHide='show'>Blue is a color in the skittles</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='violet'> Violet\n                <feedbackInline csFeedbackId='violet' identifier='violet' showHide='show'>Violet is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='white'> White\n                <feedbackInline csFeedbackId='white' identifier='white' showHide='show'>White is not a color in the rainbow.</feedbackInline>\n            </simpleChoice>\n            <simpleChoice identifier='red'> Red\n                <feedbackInline csFeedbackId='red' identifier='red' howHide='show'>Red is a color in the rainbow</feedbackInline>\n            </simpleChoice>\n        </choiceInteraction>\n\n\n        <prompt>Identify the missing word in this famous quote from Shakespeare's Richard III.</prompt>\n        <blockquote>\n        <p>Now is the winter of our discontent<br/> Made glorious summer by this sun of\n            <textEntryInteraction responseIdentifier=\"winterDiscontent\" expectedLength=\"15\"/>;<br/>\n            And all the clouds that lour'd upon our house<br/> In the deep bosom of the ocean\n            buried.</p>\n        </blockquote>\n        <p/>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"York\"\n                csFeedbackId=\"York_1\"\n                showHide=\"show\">\n              York is correct\n        </feedbackBlock>\n        <feedbackBlock\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                identifier=\"york\"\n                csFeedbackId=\"York_2\"\n                showHide=\"show\">\n            York is a proper noun, and should be capitalized.\n        </feedbackBlock>\n        <feedbackBlock\n                incorrectResponse=\"true\"\n                csFeedbackId=\"York_3\"\n                outcomeIdentifier=\"responses.winterDiscontent.value\"\n                showHide=\"show\">\n            Not Correct\n        </feedbackBlock>\n\n        <p/>\n\n        <orderInteraction responseIdentifier=\"wivesOfHenry\" cs:requireModification=\"false\" shuffle=\"true\">\n            <prompt>Arrange the wives of Henry VIII in chronological order:</prompt>\n            <simpleChoice identifier=\"parr\">Catherine Parr</simpleChoice>\n            <simpleChoice identifier=\"boleyn\">Anne Boleyn</simpleChoice>\n            <simpleChoice identifier=\"cleves\" fixed=\"true\">Anne of Cleves</simpleChoice>\n            <simpleChoice identifier=\"aragon\">Catherine of Aragon</simpleChoice>\n            <simpleChoice identifier=\"seymour\">Jane Seymour</simpleChoice>\n            <simpleChoice identifier=\"howard\">Catherine Howard</simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n        <orderInteraction responseIdentifier=\"cutePugs\" shuffle=\"true\">\n            <prompt>Arrange these pugs in order of cuteness:</prompt>\n            <simpleChoice identifier=\"pug1\"><img src=\"http://stuffpoint.com/dogs/image/59240-dogs-4plus-pugs.jpg\" width=\"150\" height=\"150\"/> </simpleChoice>\n            <simpleChoice identifier=\"pug2\"><img src=\"http://images.fanpop.com/images/image_uploads/pug-pugs-239511_407_436.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n            <simpleChoice identifier=\"pug3\" fixed=\"true\"><img src=\"http://www.weruletheinternet.com/wp-content/uploads/images/2011/may/cute_pugs/cute_pugs_7.jpg\" width=\"150\" height=\"150\"/></simpleChoice>\n        </orderInteraction>\n\n\n        <p/>\n        <hr/>\n        <p/>\n\n\n\n        <prompt>Write Sam a postcard. Write 25-35 words.</prompt>\n        <extendedTextInteraction responseIdentifier=\"longAnswer\" expectedLength=\"200\">\n\n        </extendedTextInteraction>\n\n        <h1>Inline choice interaction</h1>\n        <p>\n            The first man on the moon was <inlineChoiceInteraction\n                responseIdentifier=\"manOnMoon\"\n                required=\"false\">\n            <inlineChoice identifier=\"armstrong\">Neil Armstrong<feedbackInline csFeedbackId=\"armstrong\" identifier=\"armstrong\" defaultFeedback=\"true\">Hooray!</feedbackInline></inlineChoice>\n            <inlineChoice identifier=\"aldrin\">Buzz Aldrin<feedbackInline csFeedbackId=\"aldrin\"  identifier=\"aldrin\" defaultFeedback=\"true\">Boohoo</feedbackInline></inlineChoice>\n        </inlineChoiceInteraction>, he landed there in 1969.\n        </p>\n\n    </itemBody>\n\n    <modalFeedback\n            outcomeIdentifier=\"responses.winterDiscontent.value\"\n            identifier=\"York\"\n            showHide=\"show\">\n        This is modal feedback, shown when 'York' was entered in the inline text question\n    </modalFeedback>\n\n\n</assessmentItem>"
    val update:Call = api.v1.routes.ItemApi.increment(itemId)
    val json:JsValue = JsObject(Seq(
      "name" -> JsString("qti.xml"),
      "contentType" -> JsString("text/xml"),
      "default" -> JsBoolean(true),
      "content" -> JsString(content)
    ))
    val updateRequest = FakeRequest(update.method,update.url+"?access_token="+token,FakeHeaders(),AnyContentAsJson(json))
    val result = routeAndCall(updateRequest).get
    status(result) must beEqualTo(OK)
    Json.parse(contentAsString(result)) match {
      case JsObject(fields) => {
        fields.find(_._1 == Item.id).map(_._2) must not be equalTo(JsString(itemId.toString))
        fields.find(_._1 == Item.version) match {
          case Some((_,JsObject(versionFields))) => versionFields.find(_._1 == Version.rev) match {
            case Some((_,JsNumber(value))) => value must beEqualTo(1)
            case _ => failure("no revision property")
          }
          case _ => failure("no version property")
        }
      }
      case _ => failure("JsObject not returned")
    }
  }
}
